import streamlit as st
import pandas as pd
from io import BytesIO
import xlsxwriter
import os

EXCEL_FILE = "form_b_database.xlsx"
SHEET_NAME = "Sheet1"

# Available villages (you can manually update this list)
village_options = ["рдкрд┐рдВрдкрд│рдЧрд╛рдВрд╡", "рдзреЛрдВрдбрдЧрд╛рд╡", "рдХреБрд╕реБрдореЗ", "рдирд╡реАрди рдЧрд╛рд╡ рдЬреЛрдбрд╛..."]

# Load or initialize data
@st.cache_data
def load_data():
    try:
        return pd.read_excel(EXCEL_FILE, sheet_name=SHEET_NAME, dtype=str)
    except FileNotFoundError:
        return pd.DataFrame(columns=[
            "рдордВрдЬреБрд░реАрдзрд╛рд░рдХрд╛рдЪреЗ рдирд╛рд╡", "рдЧрд╛рд╡рд╛рдЪреЗ рдирд╛рд╡", "рднреБрдорд╛рдкрди рдХреНрд░рдорд╛рдВрдХ",
            "рдПрдХреБрдг рдХреНрд╖реЗрддреНрд░рдлрд│", "рдордВрдЬреБрд░реАрдЪреЗ рдХреНрд╖реЗрддреНрд░", "рдордВрдЬреБрд░ рдкрд┐рдХреЗ"
        ])

def save_data(df):
    with pd.ExcelWriter(EXCEL_FILE, engine="openpyxl", mode="w") as writer:
        df.to_excel(writer, index=False, sheet_name=SHEET_NAME)

st.title("ЁЯУД рдирд╡реАрди рдордВрдЬреБрд░реА рдлреЙрд░реНрдо")

df = load_data()

# Form
with st.form("new_form"):
    col1, col2 = st.columns(2)
    with col1:
        name = st.text_input("рдордВрдЬреБрд░реАрдзрд╛рд░рдХрд╛рдЪреЗ рдирд╛рд╡")

        selected_village = st.selectbox("рдЧрд╛рд╡рд╛рдЪреЗ рдирд╛рд╡", village_options)
        if selected_village == "рдирд╡реАрди рдЧрд╛рд╡ рдЬреЛрдбрд╛...":
            village = st.text_input("рдирд╡реАрди рдЧрд╛рд╡рд╛рдЪреЗ рдирд╛рд╡")
        else:
            village = selected_village

        survey_no = st.text_input("рднреБрдорд╛рдкрди рдХреНрд░рдорд╛рдВрдХ")
    with col2:
        total_area = st.text_input("рдПрдХреБрдг рдХреНрд╖реЗрддреНрд░рдлрд│")
        approved_area = st.text_input("рдордВрдЬреБрд░реАрдЪреЗ рдХреНрд╖реЗрддреНрд░")
        crop = st.text_input("рдордВрдЬреБрд░ рдкрд┐рдХреЗ")

    submitted = st.form_submit_button("тЬЕ рд╕рдмрдорд┐рдЯ рдХрд░рд╛")

    if submitted:
        if not name or not village:
            st.warning("рдХреГрдкрдпрд╛ рд╕рд░реНрд╡ рдорд╛рд╣рд┐рддреА рднрд░рд╛.")
        else:
            new_entry = {
                "рдордВрдЬреБрд░реАрдзрд╛рд░рдХрд╛рдЪреЗ рдирд╛рд╡": name,
                "рдЧрд╛рд╡рд╛рдЪреЗ рдирд╛рд╡": village,
                "рднреБрдорд╛рдкрди рдХреНрд░рдорд╛рдВрдХ": survey_no,
                "рдПрдХреБрдг рдХреНрд╖реЗрддреНрд░рдлрд│": total_area,
                "рдордВрдЬреБрд░реАрдЪреЗ рдХреНрд╖реЗрддреНрд░": approved_area,
                "рдордВрдЬреБрд░ рдкрд┐рдХреЗ": crop
            }
            df = df._append(new_entry, ignore_index=True)
            save_data(df)
            st.success("рд░реЗрдХреЙрд░реНрдб рд╕реЗрд╡реНрд╣ рдЭрд╛рд▓рд╛!")

# Record display with delete
if not df.empty:
    st.subheader("ЁЯУЛ рд╕реЗрд╡реНрд╣ рдЭрд╛рд▓реЗрд▓реЗ рд░реЗрдХреЙрд░реНрдб:")
    selected_village_filter = st.selectbox("рдЧрд╛рд╡ рдирд┐рд╡рдбрд╛ (рдбрд╛рдЙрдирд▓реЛрдбрд╕рд╛рдареА):", sorted(df["рдЧрд╛рд╡рд╛рдЪреЗ рдирд╛рд╡"].unique()))
    filtered_df = df[df["рдЧрд╛рд╡рд╛рдЪреЗ рдирд╛рд╡"] == selected_village_filter]
    st.dataframe(filtered_df, use_container_width=True)

    # Delete Record
    delete_index = st.number_input("рдбрд┐рд▓реАрдЯ рдХрд░рд╛рдпрдЪрд╛ рдХреНрд░рдорд╛рдВрдХ (0 рдкрд╛рд╕реВрди):", min_value=0, max_value=len(df)-1, step=1)
    if st.button("ЁЯЧСя╕П рдбрд┐рд▓реАрдЯ рдХрд░рд╛"):
        df = df.drop(index=delete_index).reset_index(drop=True)
        save_data(df)
        st.success("рд░реЗрдХреЙрд░реНрдб рдбрд┐рд▓реАрдЯ рдЭрд╛рд▓рд╛.")
        st.rerun()

    # Download button for selected village
    output = BytesIO()
    with pd.ExcelWriter(output, engine='xlsxwriter') as writer:
        filtered_df.to_excel(writer, index=False, sheet_name=SHEET_NAME)
    output.seek(0)

    st.download_button(
        label=f"ЁЯУе '{selected_village_filter}' рдЧрд╛рд╡рд╛рдЪрд╛ рдПрдХреНрд╕реЗрд▓ рдбрд╛рдЙрдирд▓реЛрдб рдХрд░рд╛",
        data=output,
        file_name=f"{selected_village_filter}_records.xlsx",
        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    )
